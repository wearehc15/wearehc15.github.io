import{S as X,i as Y,s as Z,k as i,q as n,a as c,l as r,m as p,r as u,h as a,c as f,b as h,G as e,H as W}from"../chunks/index.6dba6488.js";function $(V){let d,S,E,g,G,x,s,v,L,P,b,w,K,j,k,A,y,C,U,_,q,D,I,N,H,m,T;return{c(){d=i("h1"),S=n("Welcome to SvelteKit + GitHub Pages"),E=c(),g=i("p"),G=n("It is super easy to publish SvelteKit project on GitHub Pages. Create a GitHub repo before starting this."),x=c(),s=i("ul"),v=i("li"),L=n("Install SvelteKit"),P=c(),b=i("li"),w=n("Install @sveltejs/adapter-static and gh-pages. `npm i -D @sveltejs/adapter-static gh-pages`"),K=c(),j=i("li"),k=n("Update svelte.config.js by changing adapter-auto to adaptor-static.\n   `import adapter from '@sveltejs/adapter-static';`"),A=c(),y=i("li"),C=n("Add the following to `src/routes/+layout.js`\n    `export const prerender = true;`"),U=c(),_=i("li"),q=n('Add a script to package.json. `"gh-pages": "npm run build && npx gh-pages -d build"`'),D=c(),I=i("li"),N=n("If you are using a postcss such as Tailwind css, you need to add an empty .nojekyll file to the gh-pages branch."),H=c(),m=i("p"),T=n("Now you just need to run `npm run gh-pages`.")},l(t){d=r(t,"H1",{});var o=p(d);S=u(o,"Welcome to SvelteKit + GitHub Pages"),o.forEach(a),E=f(t),g=r(t,"P",{});var z=p(g);G=u(z,"It is super easy to publish SvelteKit project on GitHub Pages. Create a GitHub repo before starting this."),z.forEach(a),x=f(t),s=r(t,"UL",{});var l=p(s);v=r(l,"LI",{});var B=p(v);L=u(B,"Install SvelteKit"),B.forEach(a),P=f(l),b=r(l,"LI",{});var F=p(b);w=u(F,"Install @sveltejs/adapter-static and gh-pages. `npm i -D @sveltejs/adapter-static gh-pages`"),F.forEach(a),K=f(l),j=r(l,"LI",{});var J=p(j);k=u(J,"Update svelte.config.js by changing adapter-auto to adaptor-static.\n   `import adapter from '@sveltejs/adapter-static';`"),J.forEach(a),A=f(l),y=r(l,"LI",{});var M=p(y);C=u(M,"Add the following to `src/routes/+layout.js`\n    `export const prerender = true;`"),M.forEach(a),U=f(l),_=r(l,"LI",{});var O=p(_);q=u(O,'Add a script to package.json. `"gh-pages": "npm run build && npx gh-pages -d build"`'),O.forEach(a),D=f(l),I=r(l,"LI",{});var Q=p(I);N=u(Q,"If you are using a postcss such as Tailwind css, you need to add an empty .nojekyll file to the gh-pages branch."),Q.forEach(a),l.forEach(a),H=f(t),m=r(t,"P",{});var R=p(m);T=u(R,"Now you just need to run `npm run gh-pages`."),R.forEach(a)},m(t,o){h(t,d,o),e(d,S),h(t,E,o),h(t,g,o),e(g,G),h(t,x,o),h(t,s,o),e(s,v),e(v,L),e(s,P),e(s,b),e(b,w),e(s,K),e(s,j),e(j,k),e(s,A),e(s,y),e(y,C),e(s,U),e(s,_),e(_,q),e(s,D),e(s,I),e(I,N),h(t,H,o),h(t,m,o),e(m,T)},p:W,i:W,o:W,d(t){t&&a(d),t&&a(E),t&&a(g),t&&a(x),t&&a(s),t&&a(H),t&&a(m)}}}class et extends X{constructor(d){super(),Y(this,d,null,$,Z,{})}}export{et as component};
